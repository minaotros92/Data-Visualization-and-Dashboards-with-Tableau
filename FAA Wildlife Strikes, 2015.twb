<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='FAA Wildlife Strikes (faa_data_subset)' inline='true' name='federated.1ywexi70lbqlr819lgmf81hzqaw6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='faa_data_subset' name='excel-direct.1gr3s2v0wffybi1c427jx0ba66fj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/minab/OneDrive/Desktop/FAA- Project/faa_data_subset.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1gr3s2v0wffybi1c427jx0ba66fj' name='FAA Wildlife Strikes' table='[&apos;FAA Wildlife Strikes$&apos;]' type='table'>
          <columns gridOrigin='A1:Y10001:no:A1:Y10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Airport: Code' ordinal='0' />
            <column datatype='string' name='Airport: Name' ordinal='1' />
            <column datatype='string' name='Origin State' ordinal='2' />
            <column datatype='string' name='Origin State Code' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='string' name='Aircraft: Type' ordinal='5' />
            <column datatype='integer' name='Aircraft: Number of engines' ordinal='6' />
            <column datatype='datetime' name='Collision Date and Time' ordinal='7' />
            <column datatype='string' name='When: Time of day' ordinal='8' />
            <column datatype='string' name='When: Phase of flight' ordinal='9' />
            <column datatype='string' name='Effect: Amount of damage (detailed)' ordinal='10' />
            <column datatype='string' name='Effect: Impact to flight' ordinal='11' />
            <column datatype='string' name='Effect: Indicated Damage' ordinal='12' />
            <column datatype='real' name='Cost: Aircraft time out of service (hours)' ordinal='13' />
            <column datatype='integer' name='Cost: Total $' ordinal='14' />
            <column datatype='real' name='Days' ordinal='15' />
            <column datatype='integer' name='Feet above ground' ordinal='16' />
            <column datatype='real' name='Miles from airport' ordinal='17' />
            <column datatype='string' name='Wildlife: Animal Category' ordinal='18' />
            <column datatype='string' name='Wildlife: Species Order' ordinal='19' />
            <column datatype='string' name='Wildlife: Species Group' ordinal='20' />
            <column datatype='string' name='Wildlife: Species' ordinal='21' />
            <column datatype='string' name='Wildlife: Species ID' ordinal='22' />
            <column datatype='integer' name='Number of Strikes' ordinal='23' />
            <column datatype='integer' name='Record ID' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1gr3s2v0wffybi1c427jx0ba66fj' name='FAA Wildlife Strikes' table='[&apos;FAA Wildlife Strikes$&apos;]' type='table'>
          <columns gridOrigin='A1:Y10001:no:A1:Y10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Airport: Code' ordinal='0' />
            <column datatype='string' name='Airport: Name' ordinal='1' />
            <column datatype='string' name='Origin State' ordinal='2' />
            <column datatype='string' name='Origin State Code' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='string' name='Aircraft: Type' ordinal='5' />
            <column datatype='integer' name='Aircraft: Number of engines' ordinal='6' />
            <column datatype='datetime' name='Collision Date and Time' ordinal='7' />
            <column datatype='string' name='When: Time of day' ordinal='8' />
            <column datatype='string' name='When: Phase of flight' ordinal='9' />
            <column datatype='string' name='Effect: Amount of damage (detailed)' ordinal='10' />
            <column datatype='string' name='Effect: Impact to flight' ordinal='11' />
            <column datatype='string' name='Effect: Indicated Damage' ordinal='12' />
            <column datatype='real' name='Cost: Aircraft time out of service (hours)' ordinal='13' />
            <column datatype='integer' name='Cost: Total $' ordinal='14' />
            <column datatype='real' name='Days' ordinal='15' />
            <column datatype='integer' name='Feet above ground' ordinal='16' />
            <column datatype='real' name='Miles from airport' ordinal='17' />
            <column datatype='string' name='Wildlife: Animal Category' ordinal='18' />
            <column datatype='string' name='Wildlife: Species Order' ordinal='19' />
            <column datatype='string' name='Wildlife: Species Group' ordinal='20' />
            <column datatype='string' name='Wildlife: Species' ordinal='21' />
            <column datatype='string' name='Wildlife: Species ID' ordinal='22' />
            <column datatype='integer' name='Number of Strikes' ordinal='23' />
            <column datatype='integer' name='Record ID' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y10001:no:A1:Y10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport: Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Airport: Code]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Airport: Code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport: Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Airport: Name]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Airport: Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Origin State]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Origin State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin State Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Origin State Code]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Origin State Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft: Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Aircraft: Type]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Aircraft: Type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft: Number of engines</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Aircraft: Number of engines]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Aircraft: Number of engines</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Collision Date and Time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Collision Date and Time]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Collision Date and Time</remote-alias>
            <ordinal>7</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>When: Time of day</remote-name>
            <remote-type>130</remote-type>
            <local-name>[When: Time of day]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>When: Time of day</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>When: Phase of flight</remote-name>
            <remote-type>130</remote-type>
            <local-name>[When: Phase of flight]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>When: Phase of flight</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Effect: Amount of damage (detailed)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Effect: Amount of damage (detailed)]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Effect: Amount of damage (detailed)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Effect: Impact to flight</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Effect: Impact to flight]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Effect: Impact to flight</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Effect: Indicated Damage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Effect: Indicated Damage]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Effect: Indicated Damage</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost: Aircraft time out of service (hours)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost: Aircraft time out of service (hours)]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Cost: Aircraft time out of service (hours)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost: Total $</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cost: Total $]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Cost: Total $</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Days</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Days]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Days</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Feet above ground</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Feet above ground]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Feet above ground</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Miles from airport</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Miles from airport]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Miles from airport</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Animal Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Animal Category]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Wildlife: Animal Category</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Species Order</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Species Order]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Wildlife: Species Order</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Species Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Species Group]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Wildlife: Species Group</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Species</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Species]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Wildlife: Species</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Species ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Species ID]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Wildlife: Species ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Strikes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Strikes]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Number of Strikes</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Record ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Record ID]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Record ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Effect: Amount of damage (detailed)]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
      <column datatype='string' name='[Origin State Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Record ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Wildlife: Species Group]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='FAA Wildlife Strikes' datatype='table' name='[__tableau_internal_object_id__].[FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA]' role='measure' type='quantitative' />
      <column-instance column='[Cost: Total $]' derivation='Avg' name='[avg:Cost: Total $:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Effect: Amount of damage (detailed)]' derivation='None' name='[none:Effect: Amount of damage (detailed):nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Wildlife: Species Group]' derivation='None' name='[none:Wildlife: Species Group:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cost: Total $]' derivation='Sum' name='[sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
      <group caption='Effect: Amount of damage (detailed) Set' name='[Effect: Amount of damage (detailed) Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:Effect: Amount of damage (detailed):nk]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[none:Effect: Amount of damage (detailed):nk]' member='&quot;None&quot;' />
            <groupfilter function='member' level='[none:Effect: Amount of damage (detailed):nk]' member='%null%' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Wildlife: Species Group Set' name='[Wildlife: Species Group Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Crows, Ravens, Jays, Magpies&quot;' />
          <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Deer&quot;' />
          <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Ducks&quot;' />
          <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Ducks, geese, swans&quot;' />
          <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Geese&quot;' />
          <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Hawks, Kites, Eagles, Ospreys, Vultures&quot;' />
          <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Kites, Hawks, Eagles&quot;' />
          <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Otters, Weasels, Wolverines, Badgers&quot;' />
          <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Owls&quot;' />
          <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Starlings&quot;' />
          <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Vultures&quot;' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ywexi70lbqlr819lgmf81hzqaw6].[avg:Cost: Total $:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Cost: Total $:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Effect: Amount of damage (detailed):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Destroyed&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Substantial&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Minor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Medium&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='FAA Wildlife Strikes' id='FAA Wildlife Strikes_736688D3AEE24D43A736F8FA4D9C5ECA'>
            <properties context=''>
              <relation connection='excel-direct.1gr3s2v0wffybi1c427jx0ba66fj' name='FAA Wildlife Strikes' table='[&apos;FAA Wildlife Strikes$&apos;]' type='table'>
                <columns gridOrigin='A1:Y10001:no:A1:Y10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='Airport: Code' ordinal='0' />
                  <column datatype='string' name='Airport: Name' ordinal='1' />
                  <column datatype='string' name='Origin State' ordinal='2' />
                  <column datatype='string' name='Origin State Code' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                  <column datatype='string' name='Aircraft: Type' ordinal='5' />
                  <column datatype='integer' name='Aircraft: Number of engines' ordinal='6' />
                  <column datatype='datetime' name='Collision Date and Time' ordinal='7' />
                  <column datatype='string' name='When: Time of day' ordinal='8' />
                  <column datatype='string' name='When: Phase of flight' ordinal='9' />
                  <column datatype='string' name='Effect: Amount of damage (detailed)' ordinal='10' />
                  <column datatype='string' name='Effect: Impact to flight' ordinal='11' />
                  <column datatype='string' name='Effect: Indicated Damage' ordinal='12' />
                  <column datatype='real' name='Cost: Aircraft time out of service (hours)' ordinal='13' />
                  <column datatype='integer' name='Cost: Total $' ordinal='14' />
                  <column datatype='real' name='Days' ordinal='15' />
                  <column datatype='integer' name='Feet above ground' ordinal='16' />
                  <column datatype='real' name='Miles from airport' ordinal='17' />
                  <column datatype='string' name='Wildlife: Animal Category' ordinal='18' />
                  <column datatype='string' name='Wildlife: Species Order' ordinal='19' />
                  <column datatype='string' name='Wildlife: Species Group' ordinal='20' />
                  <column datatype='string' name='Wildlife: Species' ordinal='21' />
                  <column datatype='string' name='Wildlife: Species ID' ordinal='22' />
                  <column datatype='integer' name='Number of Strikes' ordinal='23' />
                  <column datatype='integer' name='Record ID' ordinal='24' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Analysis_outliers (internal)'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1ywexi70lbqlr819lgmf81hzqaw6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ywexi70lbqlr819lgmf81hzqaw6'>
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column datatype='string' name='[Effect: Amount of damage (detailed)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column-instance column='[Effect: Amount of damage (detailed)]' derivation='None' name='[none:Effect: Amount of damage (detailed):nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost: Total $]' derivation='Sum' name='[sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Collision Date and Time]' derivation='Year' name='[yr:Collision Date and Time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Effect: Amount of damage (detailed):nk]' value='111' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[yr:Collision Date and Time:ok]' />
            </encodings>
            <reference-line axis-column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Cost: Total $:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Cost: Total $:qk]' z-order='1' />
            <reference-line axis-column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Cost: Total $:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[yr:Collision Date and Time:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[yr:Collision Date and Time:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Cost: Total $:qk] + [federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk])</rows>
        <cols>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Effect: Amount of damage (detailed):nk]</cols>
      </table>
      <simple-id uuid='{CC99C6E6-F236-44AB-9B20-358824802951}' />
    </worksheet>
    <worksheet name='Collisions vs Cost by Date (with Forecast)'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1ywexi70lbqlr819lgmf81hzqaw6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ywexi70lbqlr819lgmf81hzqaw6'>
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column-instance column='[Cost: Total $]' derivation='Sum' forecast-column-base='[sum:Cost: Total $:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Strikes]' derivation='Sum' forecast-column-base='[sum:Number of Strikes:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[When: Time of day]' derivation='None' name='[none:When: Time of day:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost: Total $]' derivation='Sum' name='[sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Collision Date and Time]' derivation='Month-Trunc' name='[tmn:Collision Date and Time:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:When: Time of day:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:When: Time of day:nk]' />
              <groupfilter function='member' level='[none:When: Time of day:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:When: Time of day:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[fVal:sum:Number of Strikes:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[:Measure Names]' />
              <color column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[fVal:sum:Cost: Total $:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[:Measure Names]' />
              <color column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[fVal:sum:Number of Strikes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[:Measure Names]' />
              <color column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ywexi70lbqlr819lgmf81hzqaw6].[fVal:sum:Cost: Total $:qk] + [federated.1ywexi70lbqlr819lgmf81hzqaw6].[fVal:sum:Number of Strikes:qk])</rows>
        <cols>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[tmn:Collision Date and Time:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='Year-Trunc' range-size='9' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{FE330DDB-4EE0-4625-99AE-CE70EDB983EA}' />
    </worksheet>
    <worksheet name='Comparison of Strikes and Expenses by Species'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1ywexi70lbqlr819lgmf81hzqaw6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ywexi70lbqlr819lgmf81hzqaw6'>
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Effect: Amount of damage (detailed)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Wildlife: Species Group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Species Order]' role='dimension' type='nominal' />
            <column-instance column='[Collision Date and Time]' derivation='Month' name='[mn:Collision Date and Time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Effect: Amount of damage (detailed)]' derivation='None' name='[none:Effect: Amount of damage (detailed):nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wildlife: Species Group]' derivation='None' name='[none:Wildlife: Species Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wildlife: Species Order]' derivation='None' name='[none:Wildlife: Species Order:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost: Total $]' derivation='Sum' name='[sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[mn:Collision Date and Time:ok]'>
            <groupfilter function='level-members' level='[mn:Collision Date and Time:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Effect: Amount of damage (detailed):nk]'>
            <groupfilter function='level-members' level='[none:Effect: Amount of damage (detailed):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Origin State:nk]'>
            <groupfilter function='level-members' level='[none:Origin State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Wildlife: Species Group:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Deer&quot;' />
              <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Ducks&quot;' />
              <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Ducks, geese, swans&quot;' />
              <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Geese&quot;' />
              <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Gulls, terns, kittiwakes&quot;' />
              <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Hawks, Kites, Eagles, Ospreys, Vultures&quot;' />
              <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Kites, Hawks, Eagles&quot;' />
              <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Pelicans&quot;' />
              <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Pigeons&quot;' />
              <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Starlings&quot;' />
              <groupfilter function='member' level='[none:Wildlife: Species Group:nk]' member='&quot;Vultures&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Wildlife: Species Order:nk]'>
            <groupfilter function='level-members' level='[none:Wildlife: Species Order:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Wildlife: Species Order:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Cost: Total $:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Effect: Amount of damage (detailed):nk]</column>
            <column>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Country:nk]</column>
            <column>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Origin State:nk]</column>
            <column>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Wildlife: Species Group:nk]</column>
            <column>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Wildlife: Species Order:nk]</column>
            <column>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[mn:Collision Date and Time:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Wildlife: Species Order:nk]' value='152' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Cost: Total $:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Cost: Total $:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#9d7660' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Cost: Total $:qk] + [federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk])</rows>
        <cols>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Wildlife: Species Order:nk]</cols>
      </table>
      <simple-id uuid='{B85BDDA2-1AC2-4313-9E58-9034AFDFB260}' />
    </worksheet>
    <worksheet name='Comparison of Strikes and Expenses by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1ywexi70lbqlr819lgmf81hzqaw6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ywexi70lbqlr819lgmf81hzqaw6'>
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column datatype='string' name='[Effect: Amount of damage (detailed)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Effect: Amount of damage (detailed)]' derivation='None' name='[none:Effect: Amount of damage (detailed):nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost: Total $]' derivation='Sum' name='[sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[Effect: Amount of damage (detailed) Set]' />
          <manual-sort column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Effect: Amount of damage (detailed):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Substantial&quot;</bucket>
              <bucket>&quot;Destroyed&quot;</bucket>
              <bucket>&quot;Medium&quot;</bucket>
              <bucket>&quot;Minor&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' included-values='in-range' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Origin State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Cost: Total $:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]</column>
            <column>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[Effect: Amount of damage (detailed) Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Cost: Total $:qk]' value='76' />
            <format attr='width' field='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' value='76' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Effect: Amount of damage (detailed):nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Cost: Total $:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Effect: Amount of damage (detailed):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Effect: Amount of damage (detailed):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#69aaa5' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Cost: Total $:qk] + [federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk])</rows>
        <cols>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Origin State:nk]</cols>
      </table>
      <simple-id uuid='{343D8D14-DB2E-46B1-8354-F26943B50B9D}' />
    </worksheet>
    <worksheet name='Frequency of Strikes by Time of Day'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1ywexi70lbqlr819lgmf81hzqaw6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ywexi70lbqlr819lgmf81hzqaw6'>
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column-instance column='[When: Time of day]' derivation='None' name='[none:When: Time of day:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:When: Time of day:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:When: Time of day:nk]' />
              <groupfilter function='member' level='[none:When: Time of day:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:When: Time of day:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' />
              <color column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' />
              <text column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:When: Time of day:nk]' />
              <text column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8593A050-991D-41DA-B26C-EB0671E3F67F}' />
    </worksheet>
    <worksheet name='Number of Strikes by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1ywexi70lbqlr819lgmf81hzqaw6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ywexi70lbqlr819lgmf81hzqaw6'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[When: Time of day]' derivation='None' name='[none:When: Time of day:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:When: Time of day:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:When: Time of day:nk]' />
              <groupfilter function='member' level='[none:When: Time of day:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:When: Time of day:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[Longitude (generated)]' field-type='quantitative' max='-6914237.3896107264' min='-14915435.757265467' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[Latitude (generated)]' field-type='quantitative' max='6698255.6896081613' min='2609795.6368933055' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' />
              <lod column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Country:nk]' />
              <lod column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Origin State:nk]' />
              <text column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' />
              <text column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Origin State:nk]' />
              <geometry column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[Latitude (generated)]</rows>
        <cols>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CA8B3D25-9A78-4348-B2D1-2C154570345E}' />
    </worksheet>
    <worksheet name='Strikes Effect on Flights'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1ywexi70lbqlr819lgmf81hzqaw6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ywexi70lbqlr819lgmf81hzqaw6'>
            <column datatype='string' name='[Effect: Impact to flight]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column-instance column='[Effect: Impact to flight]' derivation='None' name='[none:Effect: Impact to flight:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Effect: Impact to flight:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Effect: Impact to flight:nk]' />
              <groupfilter function='member' level='[none:Effect: Impact to flight:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Effect: Impact to flight:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Effect: Impact to flight:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='width' value='148' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Effect: Impact to flight:nk]' value='196' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' />
              <text column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Effect: Impact to flight:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{8FCC1973-C9CD-4C5A-A7BB-0A7DD4F26172}' />
    </worksheet>
    <worksheet name='Time of Day vs Avg Cost by Strike'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1ywexi70lbqlr819lgmf81hzqaw6' />
          </datasources>
          <datasource-dependencies datasource='federated.1ywexi70lbqlr819lgmf81hzqaw6'>
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column-instance column='[Cost: Total $]' derivation='Avg' name='[avg:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[When: Time of day]' derivation='None' name='[none:When: Time of day:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost: Total $]' derivation='Sum' name='[sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:When: Time of day:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:When: Time of day:nk]' />
              <groupfilter function='member' level='[none:When: Time of day:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:When: Time of day:nk]' direction='DESC' />
          <slices>
            <column>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:When: Time of day:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Cost: Total $:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[avg:Cost: Total $:qk]</rows>
        <cols>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:When: Time of day:nk]</cols>
      </table>
      <simple-id uuid='{94F02647-CD86-4FAF-A0F3-1FAF79D314EF}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='46986' id='5' name='Number of Strikes by State' w='45538' x='2090' y='2395' />
        <zone h='33196' id='7' name='Comparison of Strikes and Expenses by State' w='46017' x='48498' y='5037' />
        <zone h='21269' id='11' name='Collisions vs Cost by Date (with Forecast)' w='49833' x='1399' y='50999' />
        <zone h='22791' id='12' name='Frequency of Strikes by Time of Day' w='42055' x='53983' y='43435' />
        <zone h='26012' id='13' name='Time of Day vs Avg Cost by Strike' w='33261' x='54419' y='68786' />
        <zone h='28555' id='14' name='Strikes Effect on Flights' w='14923' x='39707' y='70270' />
        <zone h='26087' id='27' name='Comparison of Strikes and Expenses by Species' w='36782' x='1535' y='72738' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1650' minheight='1650' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='28' param='vert' type-v2='layout-flow' w='99152' x='424' y='940'>
                <zone fixed-size='280' h='46986' id='5' is-fixed='true' name='Number of Strikes by State' w='45538' x='2090' y='2395'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33196' id='7' is-fixed='true' name='Comparison of Strikes and Expenses by State' w='46017' x='48498' y='5037'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='183' h='22791' id='12' is-fixed='true' name='Frequency of Strikes by Time of Day' w='42055' x='53983' y='43435'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='170' h='21269' id='11' is-fixed='true' name='Collisions vs Cost by Date (with Forecast)' w='49833' x='1399' y='50999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='208' h='26012' id='13' is-fixed='true' name='Time of Day vs Avg Cost by Strike' w='33261' x='54419' y='68786'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='229' h='28555' id='14' is-fixed='true' name='Strikes Effect on Flights' w='14923' x='39707' y='70270'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='209' h='26087' id='27' is-fixed='true' name='Comparison of Strikes and Expenses by Species' w='36782' x='1535' y='72738'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{51A9C728-33E3-44CA-ADA4-4CC1E8C85FB4}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' show-side-pane='false' source-height='37'>
    <window class='worksheet' name='Number of Strikes by State'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card size='12' type='pages' />
            <card size='22' type='filters' />
            <card size='85' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Origin State:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Collision Date and Time:qk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Country:nk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Origin State:nk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:When: Time of day:nk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Wildlife: Species Group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A6660898-B9FB-448F-B7B1-83C921461455}' />
    </window>
    <window class='worksheet' name='Comparison of Strikes and Expenses by Species'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card size='26' type='pages' />
            <card size='87' type='filters' />
            <card size='264' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[Effect: Amount of damage (detailed) Set]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[Wildlife: Species Group Set]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Collision Date and Time:qk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Country:nk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Origin State:nk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:When: Time of day:nk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Wildlife: Species Group:nk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Wildlife: Species Order:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD340F45-FBFF-4C08-ADCE-E68ECCAAB923}' />
    </window>
    <window class='worksheet' name='Comparison of Strikes and Expenses by State'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card size='9' type='pages' />
            <card size='17' type='filters' />
            <card size='68' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Effect: Amount of damage (detailed):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[Effect: Amount of damage (detailed) Set]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Origin State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{73F1DA59-65E1-41D5-852E-28E057652433}' />
    </window>
    <window class='worksheet' name='Collisions vs Cost by Date (with Forecast)'>
      <cards>
        <edge name='left'>
          <strip size='268'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='216'>
            <card pane-specification-id='1' param='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[:Measure Names]&#10;[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[:Measure Names]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Forecast Indicator:nk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Origin State:nk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:When: Time of day:nk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[yr:Collision Date and Time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0EE0530C-7E12-49CA-8475-7118C895F77B}' />
    </window>
    <window class='worksheet' name='Frequency of Strikes by Time of Day'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:When: Time of day:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:When: Time of day:nk]</field>
                  <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Dawn&quot;</value>
                <value>873</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Origin State:nk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:When: Time of day:nk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{779E84FC-7B3F-4702-ADAF-8233AC94AF61}' />
    </window>
    <window class='worksheet' name='Time of Day vs Avg Cost by Strike'>
      <cards>
        <edge name='left'>
          <strip size='288'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:When: Time of day:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[avg:Cost: Total $:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[avg:Cost: Total $:qk]</field>
                  <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:When: Time of day:nk]</field>
                  <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Cost: Total $:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>17257.618351603734</value>
                <value>&quot;Night&quot;</value>
                <value>85011028</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Origin State:nk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:When: Time of day:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6EB1A022-F7A5-468C-A848-9D26461746E1}' />
    </window>
    <window class='worksheet' name='Strikes Effect on Flights'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[:Measure Names]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Origin State:nk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[sum:Number of Strikes:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E51C38D-847F-435D-95E3-67E67A66DD34}' />
    </window>
    <window class='worksheet' name='Analysis_outliers (internal)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Origin State:nk]</field>
            <field>[federated.1ywexi70lbqlr819lgmf81hzqaw6].[yr:Collision Date and Time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{88B36173-1A41-429F-A3B3-E4DA454CEDC8}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Collisions vs Cost by Date (with Forecast)'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ywexi70lbqlr819lgmf81hzqaw6].[:Measure Names]&#10;[federated.1ywexi70lbqlr819lgmf81hzqaw6].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Comparison of Strikes and Expenses by Species'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Comparison of Strikes and Expenses by State'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Frequency of Strikes by Time of Day'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Number of Strikes by State'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Strikes Effect on Flights'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Time of Day vs Avg Cost by Strike'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='27' />
      <simple-id uuid='{BE846EDB-6555-446E-8794-43F7F00E39FB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Analysis_outliers (internal)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Collisions vs Cost by Date (with Forecast)' width='192'>
      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
      43eBfHY0/z9yze0GIPy3qAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Comparison of Strikes and Expenses by Species' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Comparison of Strikes and Expenses by State' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29Z5BkSX7Y93vvlffVVW2qvZ/unpkds7u35nAO548gQBBHBkBQOlGkKCko
      80EKSRAUCoVCDH6QGFIoqJAYASpAkCKFIAQGQZg77OH21tzurRs/0zPtu6ttee+e04feqerq
      KTM102Zm+v0iJmIyKytf1uv3f5n5z78RdF3XMTA4o4inPQADg9PkWAUgl8sdZ/cGBk/NsQqA
      qqrH2b3BE6LrGgv3bjK/tM7DFXB8J0y6UKm2WVtZQTvwHaWc55OPfs5OLEW5XK7r73D5ecJ0
      2gMwOHl2Hlxjp+zDtn2TW+UiydgeNrOJ/gk7Nz+5i90bpJKOUyqmyeQKBIfPk7r7NpZzX8Up
      lflH//vv8Gu//jeIba8iObv44Cc/5Be/91dRs3sUdAevXrmAIJz2r3w8jD3AGSSfyeHt8tHl
      dbKztkzOHMBJnnsf/xTnyGXWl+eJRaOsL68wMRri2t0VLn3lu+RXPuWj2+uMjI/T32UjkSpw
      4/pNegeGmB108vaHt4nsbaNoz49exZgBziBjL13lp+99RFSycGlmlJSlD3uuwkTvGPfvf0q+
      rDI9PIjFBBarg76ARmQnjCZa8Hq9uPQMa1u7KJpAf6iPQb+V2+EMs2O9ePpCiM/J2x9AeKgG
      LZfLaJrWrn1H5HI5XC7XkfZpcHxUckk+vXWHrr5xZsYHTns4J0JVAGRZNgTA4MxRXQKZzeYj
      77xUKmG1Wo+8XwODo+IJNsEad29eY2FpnUxijxs3bpDM5rl+7Ra6rrNy7zOiOeXoR2pgcAx0
      vglWK+SKMn4X7ESTXLp0kYWFB2j5FNFsgUwygdir0mUX0DSNa1thIvnagdior4vJrsBR/gYD
      gyemYwHQMHPpyhXWF+9RwkKlUkIXJHyhYTbuXicQ7AFAFEVEUeRuZI87ezvV739tfJJz3T1H
      9wsMDJ6CjgVAQGd7YxWLt5exoIul5Q3GJieoFMo47Cb8PhcV0YTw+UlII42Y8Lyckhi88HQu
      AJKJ8alz1fLc3CwAdosFr88NgO2IBmdgcNwYJ8EGZxpDAAzONMduClFIq6T35Gq51HO0h20G
      Bk/DsQtAcltm50HNzDbbZ5wRGDw7GEsggzONIQAGZxpDAAzONIYAGJxpDAEwONM8kQDouk6p
      VEbXNXK5/IEyVMol1OfIJc7gbPNEAhDdWuWj67cJryywvR1mJbzFuz95F1nXufPzHxNOVtp3
      YmDwDNDxOYBcyrK+m8aKSk6GuZlzLCzcZXSom7WVNSxOP7AfEkXTNPRDs4Gm6yiKcRZg8GzQ
      sQCIJgvDQyGWl1dxWgSuX79GV+8AiiQT3V5ibLSfIgKSJCGKIsIhD2lREDCZDF98g2eDhk9i
      Op3GbrdjsVge+UwyWent7aO3tw+AkQOfTUwMHcsgDQyOi4Z7gLfeeotwOGxEdjN44Wm6Cf7o
      o494//33SSaTJzkeA4MTpeESaGRkpLpRXV1dxe/3n+igDAxOioYC8Oqrr570OAwMToWGApCJ
      bVOxdHH7gx+Bd4ivvXH1pMdlYHAiNBSAm5+8w3w4jb1rBG33FtHZabp9RoQ3gxePhgLwC9/6
      PoGFFWZmp0nGEwSMh9/gBaWhFkjTYXhogEIuj93hPOkxGRicGI0PwqKbvPPz62SzWdw9I/zq
      d756wsMyMDgZGs4AXaExRvq6qCgySrlw0mMyMDgxmhrleIMhLs8J7ObqbXl0VWZhcYF8UaG/
      18/OXoy+oTGW7s7zxS+/wfyn7+KbepMB39FHmzYwOGoaCoCu66i6zpVXf4GlxcW6zwTJjNfl
      JJVLkcwWuXz5CouL9/DbBLaiSRRVQ1a1ltag+VKJf3X3Vl39r85ewNnA9sjA4DhpKABqpcDP
      3vkL5ucX6BuZrPtMU2Scvm5csThypUI6HUcT7dgDLnYWbhIK9aBCS2tQRIH56F5d/V+Zu8gn
      22HeW1ut1o13Bfj+hUtH9FMNDB6loQCYrE6+9+1v8cGntylX6m33BUkiFdvDHxqlL+hhfWOb
      qfFRyqUKwaAXp8OCLDzZ8qcgy8QL+Wo5aGigDI6ZpnuA9XCYV974Indv1y9VBEFkaHS8Wh4b
      2zeIdjhs4LC17tTA4BmjoRYosbvO3NU3iW5tcPXV1096TAYGJ0bDl3Vsa4nPfnYLlwXSFZGe
      N18+6XHVcXNnC/mAb8JkoBuf3X6KIzJ4UWgoAL7eEX7pwiTuZyS/3R/fv0emXKqWf3D1VUMA
      DI6EhgLQMzi5r8LURXRdQxSN8EEGLyZNn+yVe5+RKsO1a5+d5HgMDE6UhgKg6zqy5MBtUrAb
      Sw2DF5gmB2FFPvrZO9x/sEjv8NRJj+mxyJRKrCbj1bJZkpjr6TvFERk8jzQ5CHNw6fLLyKU8
      K+EN3rx6/qTH1ZbNTIp/cfNateyx2gwBMOiYpnuAgNdBWndy+dx4syYGBs89TQVAFEVy0S22
      Ytn6DzSFpQfzzC+sUMjEuXnzFtliiXt376PrOuGluyTyRuhDg+eDplYL0WiMyZk5NsKbhz4R
      GZ2YZGF+nuXNChcvzrKwuEQuGiFRGCW+t4Xqn8RnF9F1Hf1QoGhdB61B9Oh9tevheh1NezSp
      nq7pDTJwN25rYNCKhjNAOZ9h8uKruKxm5mZn6z7TBZ2lB/fpH5vGIurA/kMbGBhk4+4N3F3d
      TzaSTpLHG4nmDY6IhjPA7vo8evdFxsbHefe9dxkbHqh+psllihWFne1Nhvt7uX37PuPT01QK
      JUwSdAe9lEyfm0ILAsKhh1UQQBQffYJFYb/9odYND+Eebde8rYFBKxoKwMDEBd760Y/4TNaY
      ufRa3WeSxcGVK1eq5UuXuvb/Y7cRCPgAcBzTYA0Mjpqm/gDf/eVfPemxGBicOMaaweBMYwiA
      wZnGEACDM80L572oaho6tfMEURD3HfENDBrwwgnA73zwMfd2d6vl752f5StT4/x8Y72u3Zsj
      Y1gk6aSHZ/CM8cIJwN5ymbUHNe+xVJdCaVThzxbm69q9MjhkCICBsQcwONu8cDNAJ/x46QHv
      rq5Uy3O9vfz6S0YykLPEmRYARdMoqzXLVVk1jOnOGp0LgK6yeOcTZNcUXiFBJJmhq3eA+9dv
      8/XvfoOb7/0JgQvfYjTw/Mb5/Ci8jnLAsvR8T58RheIFpXMBECTGJ8dZ3NXJVzSuXLnKwsJd
      Rvr9bIS3sdg9gN4yOK7SIP+woiqPmDPruv55tspDfaga5bzG7mK5WldyCihfUh4xqdY0rWG+
      Y1VRHzHL1nUNRVH4swfzFBW5Wh+w23GZjWjXLyIdC4CuKexs7xKJmxnyCywsPECy+ZBEncjG
      A0aG+ynTOjiuqYH2xSSZHrHmFAQBk8nEYftnURJRZZ3UTm35InpUTCbTI5aioigiNbieZJIe
      sUoVBHH/eoeODSRRIlEqcjdSU6/aTWZeHx59pF+D54snmAFEvD2jXO4RcDkdFAolnE4Hqqox
      PNyLJInowounXtzNZvnhwv1qOeBw8PrwKCWlfuYySxJmQ7363NCxAAiCiNvtqZZdrv0IziaT
      BJy9P/zvXfuY5UQtOsVfOjfHxb4Q//xGfTyl/+gLb5Itl+si3DktFrqdRgLC0+RMa4GOC0XT
      2Eyn6uo0Xedn66u8v15Tu17pH+DXX7rKv7x5DfXALPKtqRlEAVYOCJbdbOFiX4hcuYyi19ra
      TWasJuPP+KQYd+4Z4M7eTp3W6RdGx4kX8vx/B7Lo9LncXOwL8U+vfcJGOlmt/5W5C7zcP8R6
      KlnX51Qg2MRzzuAghgC8AMQLef7Jpz+vq/sH3/4lPlxf5X40Uq07193DF0fG+L8//aiu7S/P
      XcBptpCr1LRqJlHEb3/xffsMAXiB2c1leRCrCYDXtp/A5GAdQFmWWYpF+df3blfrhrw+/pM3
      vsRPlhdIlWr7lu9Oz2J/gVTChgAYtOTW7g472Uy1/I2JaUMAXhRmM3dwb/9RtRywvAq88tT9
      6oqOsnMov/KjoZAMngGeSgDiu2E2dqKEhsdZunefN3/hNR5cew/v5Bv0e4/3LdFvivN9x0+r
      ZbvdB/xKR330ZGJ4Nh9Uy2b3QIvWj48/n+M//9G/qasz/0ZnY3uWWYrHWE7EquUep4sr/YOE
      U0nUAyfxPS4Xug7RfK5aJ4kiQ14fu9kspQOn7T67HZ/t5M1Nnk4AMgUuX77M4uI8XrPGdixF
      paJQUY7WqGx3sUwyV1uHlqY0JpUs383fq9aJUrDjfsuRLrL3amlg7a4+DK18e1YTcX6yXMsf
      PdvTy5X+QX732id1G+m/9fIXUDSNf3b902qdz2bnt776Df7kwV0WYtFq/XemZnh1cLhuHwLw
      1y9eRtN1ykrt1N8sSUeWU/qpBEDQZLLZFJpgwxF0sf3gJqG+/TzBD/mS9Rajztqh0KzFDMw0
      7K9/a41Xfv6Tajk0NQevvMZQdhVPphaj1KFcRi3YKawOVuskv/9pfkpbnGqWsVztj+7Fd6zX
      a0Yxq5JP1h4GpfTirK0qqsqdvZ26uu9feIm3V5Z4Z3W5WvdSXz+/efll/tGH79UJxl+/eJn+
      yg7y/B9X6wRHF9ZX/07Taz6VAExMTbO6tsnUxCjlYoVAwPNInuBLwhpzwo1q2Spcodn80B/L
      47xfS6Bts4UA+M3l+6iJRLU+mPs2ncRHtMs5/vLN36mrs375y3QSwrd/N8Ivv1UTTlNPP3zn
      32dk+zbWzaVqfaDXA73TDfs49+A29nfeqpZDr7wBHfof/Ic7v4uyVTsfcEz/18T7vt1RHyeJ
      r5Ti5a3aDOBweYFv4JbTBMq1GcCuDjftY6iwzquJn9XKrpeAl4nkc3UCUFFVtMQq8rXfq9aJ
      /jGsr/4d/q+PPqjLJ/GXZ85zvrevJgC5XK6h1WQ7gsEAuez+Gk8QRQolBciSLkI+n0ctXKJc
      qq3tHPkxzKkMlxbjdf2UXkqjO51Upg8k5OjtIZ1OUxkdRQ3Wljh5Yd9o7mBbyeUinU7zZiDO
      5FhNzTdhT1DIehhQ5uqul8sUKLrddX0I3UHS6TSXoxvIcm0ql1JTZDUbhd5atkzJ5yOdTjOX
      1plO194jjnSFrL9c/zuATC6HU3Aw6q7NWjZxf8z+ogXlgC9COVvAU4rxFSVc61fev16q8Bpy
      qfawlHN9VAoFBg+tnzPpNKOlPWwH+ugtWUmn04/ce/VcGkcsVVfvC2qk59J8d+sWcrJ2P5XU
      VfqK0bqxdZV10uk0IYuV4gGDRq1UxhIrcPWAO7bk2W/75tIGr27UTsXt7n4q7iCvRNfqxpZP
      pwmVYnSrNUNEqRIinU7Tb7Ehm2rPrFIqkdXsVII1RYbg7kFJp+mSJOQD98gkK5RSMQT90ZDM
      R0Y6ncbr9R5X9wYGT81T+QRXymV0oFwqoqgamqpQLJbafs/A4FnhifcAlUKGt37yc778pcss
      bcQQRQm7UEbVVPwDs/T5bUc5TgODY+GJBEDXde7fXyAY8BLZSzE6OUlsYw0NG9NTfaxuJFE9
      PWia9rlH1+Px7toKb6/WNpRTgSB/w3BSNzhGnngG6B8cZOnBEi6vk8W7d7DaXTiFEjdvzjM4
      fbnqEWbqwFRXF/Z38g9RNL2j7xsYdMoTPV2CIBDs6SPQ3QuCQE9P/yOfGxg8DzzdQdjDB914
      4A2eU4zIcAZnGkMADM40hgAYnGkMATA40xgCYHCmeS6U7P/y5jUKcqVa/ubkOYZ9x2v+bHA2
      eC4EYCURrwso9YYRktDgiDCWQAZnGkMADM40hgAYnGkMATA40xgCYHCmaSoAa8sLLM3f5E9/
      8kHDz4v5DJFoHF2HdDJOqaKgyGViiVTD9gYGzyJN1aDJ6Db3t3KM9AcafKpTKpUpZSIsxOIo
      JjPqVgSLIGO3mShrFgaCL35gVYPnn6YCMDg4TLS8Q6i3t8GnAlazxIO9FD5vgP7Bgc89wiQG
      h/tY3Uij+q0de4R1kiOsk34NDJrRVADWw5uUcyluz2cYGx8/9KlOLBbH4bBjd9pZunsHu8uL
      Uyxx8+YDRmefzCOskxxhhqeYwVHQ9CkaHhnFbI9TUBo5uwgMj0/xMDrNyOhI9ZOxIx6ggcFx
      0nATrMhlKqUcH3zwAaLFedJjMjA4MRoKQD4ZYX55i9GxcZRyoVETA4MXgoZLILlcRBIF9uJx
      ZOnkZoDuxDoXln5aLQ/Is8BrJ3Z9g7NHQwEIDk0T2oswMvc9hoOeRk2OhXPaCmPyj6plSSkA
      zSP7Ghg8LU0PwpxeLzc+eJt3P7p+kuMxMDhRGgqArqmsbu3xxS9+EZNebtTEwOCFoKEAaKpM
      MZ9neWWFkYnGse4NDF4EGgpAJLzEhde/QTS8xGfXbjVqcqIoZZ1KSav+0ztPY2Bg0JCGm2BJ
      EvjzP/p9pl/5GnJy46kusJVJkz3gzhhwOOl2dpaJ699Z+8co2Vo2kf4L/wDoe6pxGRhAEwHo
      GTnPD/7WeUBHbZG65nF4e3mR2wfyPn1tfJLvTM921EePlEQ31VIk2YRKi9YGBo9PwyXQ5sJ1
      /uitn5JKpckbCS8MXmAaCkDfyDQWOcvi4iLrmzuNmhgYvBA0FACT1cn02CCb4TCb25FGTQwM
      XgiaHoQV8jm8XUEq5eJJjsfA4ERpag49d/VNRvIF7I7GtkDbGytEYnH8Xb3sxWLYHG6cYol0
      rsjwucsE3UeTydvA4DhpKgALNz7GMXwep7Nx8ovevhCJdA6tUmHq/AViG2soWLl0aYTVjTh+
      x36OMO1QFtZWXmJKwYScdFfLetC+3/ZQIldV0+CMeoStpxIUZbla7nV58NvtLb5h0IqmAmBz
      2vngx3+KPzTKt7/y+qFPdW7duE5XaASvTWB9dRVB07EKFVaWVnH1Tlc9wsRD2WNaeYnlk13k
      FmouNTZHHx6T6ZGk8FKHnmYvEj9cXGAjnayWf2XuAm+6DTekJ6XpU2SSLDi6ehjraxyEdnr2
      AhVFxeH2MGV3Y7I5kNAolCq4XcYbyeD5oHlUiFSS5O46t4olps+dO/SpgNPt4eHuwOJ6uGyR
      cLvMxzJQA4PjoKkWKNjlpVSs4AuGTnI8BgYnSsMZoFzIcuP+Gt/89rdZWlp5qgukIwqRlZrp
      Qt5nWLIZPDs0dYkMBHuIRSKEBp7OFugHlX/Fb5R+XC3blL8NXOioj/SNGdRET7Vs+rLn+Uhs
      YPDM0/A5cvl7sOjzhCMZXIr0VBeQBA2zUHvrS4d1mo+DLoBeW609QQ8GBg1pHhxX09Gafmhg
      8GLQdCWh6AKjo6PYnd6THI+BwYnSdAawmzV+8uMf87NPbp7keAwMTpSmM8D43Mv8xtAs9xcW
      T3I8BgYnSlMBiO9tcvvBOl2h0RMczovNfGSP1WS8Wh7weLkUGjjFERk0FID49jIffnYXXVOJ
      F1Z47XJnLowGjVmKx3h/vXaucqV/oGMBeHP5j7m4/aBaHu35uzBs2AI9KQ0FoKtvhNmJGHup
      AmPTcyc9JoMWTJvCaObastQqGhl5noaGm+Dw/Ke8/fEdEvEYC095EqyVLSgFW/WfJhtHWAbP
      Dg2fxuHzr/Ofnj9sAl2PruuoqorJZKJSLiOZzQjoyLKK1VpzhilshCjergXXEiaCPCu2ord3
      d7gf3auWB71e3miynFA1DVmtHegJgoDVZGI5HiNXqUXP6/d4Ow77YnB6PPHrOLoTZnk7ztXp
      Qe6u7iGZzNiFMrKiEBieo89nO8pxHgtbmRSfboWr5ZKiNBWAu3u7/D83P6uWAw4H/9WXv85f
      LC+wnKhtbP/SuTm6xwwBeF54YgHo6R8mls6RTuYYm57+PEeYjZmpPlY3kqjufY8wvQOPsGY5
      wg51cWQ5wjStvmNdb96vqqmH2vL52DrweJNVlHLtNyqVJ/gdHVzPoD1PKAA6u5sbhMNhghfP
      szR/D4vVgUMocef2A0ITL1U9woQOPMKa5Qg71MWR5QgTxfqOBaF5v5IoHWrL52N7/N/3Rux9
      phf+oFr2mr6JyfRKR2Mud3A9g/Y8+QwQGuTrfQOIkkSwJ4Tw+cOraTqSZOTfboRPyuI01cLM
      mMR007aRXI6leC0cpMNi4XJoADnhRd6tpa41FZ/9peazzBMKgIAoSTUVklR7O0pSYyf6o0bX
      9Ucc7iWxseAV5Ap/vvigru6707MEKlGmsvPVupBXBTp7Ix8X4XSSfzN/p1ruc7m5HBqgtBOk
      sl47O7BlO8/gox5aaoqC8MhMdlY4lblT0zT28rm6up4ONSfz0T3+6bVPqmWP1cZvf+2bDdtW
      FJUPN9bq6r4xOc1L6evMbP5etc5k+ybwVxr2EahEeSP+TrXsLAeBr3c05meF//bP/6Su/J+9
      8SUGvL4THUOikKd8QKvmtlhxWa0nOgY4JQEoKjL/28/eqav7ra9843Dwh2eKnvIOX4/8sFoW
      ykPAf4OaLqHEasKsDcsNvr1PJe6jsDxYLdsCXc+MSvik+df3brMQqy3xvjM1w9cmpk58HMbu
      6Sn5Qfqfo0Y/rpathf8SmGnYVs05qMS6qmVT5tlRl26mU8xHamciHpuN14ZGWnzj8VhJxPmz
      B/eqZZfVxg+uvvrU/R4VZ1oAKnEfucWay6fN9ewc0h0FRVmuO7wzSxJ2c+OoHZvpFD9eXqiW
      h7y+IxGAglxhI10z1/DZnq07/NwKgD8X4bX7/7Zatrt80GQPoGs6+eQhZ3wN1IINOVFb+5pa
      bCh12YScrr2xpWNOHxsqbfH1vT+tll2VAeCrHfXxZwvzfBRer5a/MDjMr1249Mi90FSw5dN0
      h2uKAl95PxrIRipJRa2dM4z6uzCJT+cm24xCpcLbK0t1dd+aOsdyIsZyvHbY2O/xcKV/8PDX
      n4hTEQBdh0rx0UOvTvYAQTXFLxY/rZZFqadpW6+W4X/a+e/r6hzaV8h0cD054yJ3f7xaNvX2
      4gW0ihm1VDP90FWJdKnIH96tTy31Ny93pl3qLu/xRuK9alkUjm59fPheuOTfp1e+z0Tud2vX
      c14AfpM/vHuLnWztTv32V7+Jx/b4AnAue4/fmv/tWr+eEHz1G0xl5/EkajNOqOSmpAzw7tpy
      3fd/cWKSlUS8rv6lvv7nWwDsapG/t/y/1NW5lNfpJCe9knGRuVlba0t+P00zGus64uHj5CNy
      rc8vD1G+m62WxYt+KqrK/Wh9WPnDKtvTRBLqXz4COlrZQuVAXFbT50GRRV1F1A+eNO+rnw/+
      HoHmKmgA6YB3uaDv//+V5Ieoex9U6y35cXLaqxTj9VlJW922+9EIml7re8TXhdPSWVDmUxEA
      QdDplZJ1ddIxuuBrFQupTy7W1Tn/g+d29ffYjOcXEeMfVsuj/teAS5S2u+va2WQTcspN/kBc
      Vovajxf422v/B1q0tjRyfumL/EV4o26/MNvTy7939QsNx6CVLHXXE/0Bmm39/WqSvx/5H+rq
      7Nq3uJL6mKH1P6zWeU1fAl7mX9z8jPIBM5C/++obTASCTXpvzOk8BapIfrl+CnM8ZfiVo+Qf
      vvd2XQTm37z8Ms0XWA1QtTrVKNBywrm1u133Rp0KBCHuJXWt5ohkHhqm013HTPYuEwdUt+Ye
      F/DXKIbro/155eMLZ6kWbXXXk4qBFq0b49pREW7XgqvZLEdn+3SkAiCXC0QSOQZCrR8XXRPr
      1IEP646C69ubRPP5ankyEKTT0F7ReJFCpXbDK3Jn0ey65CT/3cr/Wldn0X+l6RLv929dRzlw
      Ovsfv/ZFgpqIfuDB1J/Aj6K03U3+zmS17OzqoVPDCbVgQ806ahW6wEhhhS9H36pW9VovAl/g
      ndUlykrtXl3tH+DAN+v7LdpQDvRrrpjRKmYyB8YL4FRFlLz9kPr46BQQRyoAS4vL+L02NiIO
      hntOR8f92cYm9/Zq+uzvzsww3OG0+F9s/89oxZqdjr/0f9L8eOtRtLKF7L36P6S3hYDHP45Q
      kWtvNXnuaLJgamULar72kKnlzpOW5JeHkNdrs5NbMTEY3aHr3vVqnUXffyDfXV2p840Y9vma
      vnyK6/2UDtwj8SU/pmmhbrz7NFeNfP3u/4taqWUw6pobhyZ/6/vRPbLl2tiGvH763O6jFQDJ
      bKW7r5fVjRyckgCYlzewLdQ0BpIv2PSmNGXLD4UDt6ZkBo4vNev/mPkDdLnWv199o6OrZUol
      3lur99z73rnj8+OuJD0UVoeqZb1rf1kzXFilUK7Ncw61sxCYnTK7m0Iv1a7nrDRfGv3w5gJL
      0Zoq9deuXsQ8JB6tAFgljVu3Fhibu3yU3XbE983vI9ver5ZtUpBmJ7PNKO8F0HK1xYJWOV4B
      KO8G0Su1OUavdLYm14pJCtf+WX3lub9/FEPriF+68UO0bC2fs/f8Gygc396uvBtEL9ZmAK3c
      /L79u0t/gLxaU027h/4eQs9rRysAI5MzPP3Z4dORXx2kdEA9KpwLYurs+X/ucGTLvPGjhfrK
      Xz/5cRTDfWjp2kmvq2iDjhaPT4+W3UPdq1n4CmYHppEvIO8GKK/XNuP2jBN7AQT9c5emXC6H
      qh5t6PJ8Po8lkUTN1A5STN1BRL+fyqGAW5apSbR0GiVSM5CS3C5MQ0NUFhfRD6yRzUP7068c
      rrkzCmYTlqkplHAYNVvTwJh6uhG9XiqL9SeMlukptGQSJRqrXc/jwTQ4QOXBAvpBE4KRYVBV
      5M2t2vUsFiyTE8jrG2gHNt2mvl5Ep5PKcv2SxDJzDi0aRYnX3pCSz4upv5/K/fvoB7zTzKMj
      IMvIW9vVOtFmxTw+jry2hlaovfXMoT6w25FXVuuuZ52dQdnbQ03U1M2S348p1Ef53nxdW/PY
      GJRKyDu1nNCi3Y55bBR5ZRWtVEuW3vjv5MY0NEhlYRH9gFrSPDwEuo4c3qzdN7MZy9Qk8sYG
      Wu7AfevtQXS7qSzVH4RZzk2jxeMosdryRfJ6MA0MUHnwAF2tKQ8a/Z1EqwXzxATy+jpavrZc
      Mvf1gdNRE4DjIJ1O4/U+GltU07RHvL8a1TWrfzjkwzbsnfTRaVuhgc38s3A9XeRpdH8AAA7W
      SURBVNfRdf3Ervei3bdTEYCHbK4uki3J2D0BRgd6W/aV2NtiYzeO3elmenKspdlEKRPnzuIm
      NruN2blzLVehcjHLg6U1RMnC2NQEdnOrVaHKyuIKNrePUG+wjROJztbGEmXVjt1uJdTX3aIt
      RLbD7MaS2F0+psZbK25TkR1yFZVUtsjc7FTTAK+aUmRjK8XoSIidjTW8oSEc5uZ3Q9cVtje3
      SSYShMZmCHiaK01VucSdm3cQ7XbGp2ZwWlrdZZX7t++iSSZCg6P4Pc2UowA6m2tLxFNFfN19
      jAy0VqlHt8Nsx5I4XF6mxlsvwPOpKPdXtrE7HMzM7N+3U/VdzOSKhEIhsqlk27bxRBrQKR5y
      pGlEOhJBN4mUC0VaL+o0IrvblFQRv9/b8jh/HxG/z010Z4MbN26TKbTeGGeyGWI7u8QSzV0f
      HxJLZhHRKeTaWyhVink29hJYBa31+bkgEY9sE4vF2InEkcR21lYqa4tLuH1u8m1+m1zKUSmW
      UXSdbL7csi3o5Apl/H4/Fkv7bWcmXwBNI5tqH/Tr4X3LZ7Nt26YiMTRRpFIoVJ+LUxOAfCaF
      y+1iZXmV3lB/y7blYh6r04XHacfpbZy18iDBoWEcEqiC2FYH4fL3MjbYu+/g3rZnjZ3tPQaH
      hpk4dw6ntdUfUyDg82N22Ai1ORgEGOgLousqZkdTi6YqdpcLMyoVXWj5BxQlC5cuzZFOp5m9
      +BLWtr7aOtMXXmEw1IvT2vrOWV1djJ0bR1LB52rnySUyNNBNJJ5q+5Ip5IsEA93Y7GYCPe3v
      2/j4CG6nHY+//Qlz3/gEIb8Li9NdfS5OTQBMZgt7kRjjE2PsbIZbtpUkE7G9XTyBHnLJRMu2
      ALHNDQIj01y9NNfmB4pYRJmP3/2QxfUVMsV2GguFQi5LKhlnczPZxvlfJ5pMYBFN7Gzvth3z
      5k6EmbmLTI+1jxWaTqRAkigXCi1nAF1TuHnzFiaTiTu37yCrre2tYrsbXL9xk/n7SwhtIk2U
      cwl2YnmGR4YwPcbMsrWXYSLkZG2z9d/PbDFjtzsIdPfitJkfCTtzmKWlJbxdPXQH2uex2F1Z
      RHN4GQh1V192pyYAVruDwVA3Ozs7eLtaH1SZLFbGx4aI7O7g8LT/oaIosLG6zMrKRlsTO7PF
      ztzlWUyYsbR9Q1ro7e9hcyvKyGjrNT0IDIQGqaglhkaG2rQFTS6xtLzM1m6sbVt/Xz8Xzk3R
      29vTctZS1SyVigVRFDHLZbJK6wVhV3cPw0NjjI+EyGZa2+aarHYq+TTb2ztU2ggWSLgdEhs7
      KbqDrWc4s9nEytIipWKe2zc+Znmj9f1wO2xsbW8/1jLT5fMS29piby9WfS5OdQ+Qz2fJpPPk
      c63X9fl0Gt1kwWG343a22kDtY3XaQVUfywQ5uhMmkddwW6DU1uanQiKeo7vbwfp6tE1bnVgi
      h82ksbsTadMW7HYbeoNAYo2wmEU++fBnZCpayyWeZPJy8eIEXq+X8fMX8LVZf6fiKaKRTVa3
      kvT1tnaS1zWNYipNvpSnorQecyEbIxIv4fVYiUTbP6get5NsLkdvqB9rmzHrOuSyGTLp1v2W
      8zl0i5Munxu73VZ9cZyqTbAuWbGZy23PH5xeL7ntLQaGRjA/RtgVhyeAK1Z4rPhEdrePgFnA
      4w7hdbdby5rx+j0Eu4No5vYGWaJWwu7tQXwMD6pgMMh2NIkktW9bKpaYPH8ZrVxEo/lbTBBE
      XJ72e4qHdPWE0K8v4HR1sxPJMNrffLbVNRVf0EeyWPk8Ml3zU1jJbCPQ5UGyehjra79Wtzg8
      jA4MPFaoFkUXcTssFNtEx5PMJvLJFCaTCfHAPT7VGcDr8XPp5Vd56fx027aiVuKza9dZWd9q
      68oSWV8nW1GpFNtpgRSikSTZdJzVlWVKcrupXCORSKMJJuzm9rdOFawU0hEKhXZaEtjcjjAz
      c45ktP1+IROLsrQWJp/Ntvl9nWLC43OwuRXF42nlu6ui6GZ6BwY5NzmB19n6xWG12Ugn42Ri
      W3zwwUfEMqWW7fPJCDdu32Un2lo7WC4W6Q310t03yPhoaxWoZLYS7PKSSacoycrp7wEAknvr
      fHbjNlt78bZtFVXH5bSTO3Dq2oyekWFMco5UWW3xXgKQGJ2cZGpqioDbSr7UbhMs4LKb2Axv
      kG27YQazqOAJDuJ2t1+2TU+OcvPaDXra5GXWdZ2uUB9WXUY12458Cu8fm6Tb62qrMq1UKgii
      2PCQ6lFMOBxmFF2ktyfQ3hlPMmEzCeTzxZbNREnaj0SIRqncWm0rCALR8Aa94zOUkjEezhen
      KgA9oUEcVhPWxwiIpCgqkiSiPkYg2Hh4g4HZlwmY9TaWKBrb4TAb4U0snm4C7nbW8gqJeBK7
      zczubnsdtWQSKBdav+0esrK6TiAY2PdQb0FiM0zJ5OS117/A3PT4EcdSkpm/cQvJaiKeaP2i
      Se6FWV7bZntjhWSu3Qwn4PW6ESQr/YPDBL2t77OqqIiS2Dbor9liYXMjzF4sTiyy07ItQN/o
      GLH1JVzB3uqL8VT3AJs7US5cvMDt2/cI+pqbzipyGU+wD5emYTK3FhalXCBRUiivPEAQzW3O
      ASRGJiY6GLGFvv5u9qIp5i61T0uUy+dIxFN4u3taOgllk1HiyTSqIOGUWv8+VS6yOD+P22LC
      ZHEwNTV2hG8xM7OXXkJRVfzdrczZJYbHp8jce4Cum7C1PdxSSOcUJqfGMFvavewERsbHKFR0
      7Lb27jtjIwPkFAmrqf2rIBXZxeIN0tPlRmff0+DUZgBN0xjq7+XevXmGxsZbti0Xiiiaglx5
      NBz5YUxWByODfZSKZfQjzSmvE15dJl8Bh1Wk0Ha5BE6bC01Q8HW11qi4/d2MDQ9QLpcoFVtP
      +97eQa6+dJHz589z7kgffgARr8+HXaqwE209A2iaAgiYrXZMbRUTIh6XlZ2dHQqldmblOisr
      C+xuRllb22jZMpdOU1JU8ukE+WJ7c3WHz08utsPGxvbpq0EL2RTZYgWPx4PWRgsU29zG5rcR
      ixXwuJ1tp/1cMoXJZqGYKxzhJlFgaGyS8+fPc+HiDEqx/dImk5e5+vJVerraa2LSuRJmAQpt
      TD2sTudjnFc8KRrRvT2SeZWeQGstl64pFMsKdrsNsY1NVDqdxWw2NwyX/ygCob5+iqUMwb5Q
      y5YurxdJEBBFkUymvQlJameHnViKZCJefTWemgC4vF3IxSy5XJZEsrUO1xv0sXpvlVI52VYL
      pMplZLOdoNdFsKf7iNd4OoqsIEhOBkLtTTICXR42N8OkMq3fpqqqMDI6wtjEJFNTky3bHi8q
      0UiMUllGa7kX0VE0E1MTI7jd7jYbZgGv10UsGqNQKKC0OYx7MH8fSdNQgcheu7MWsNmddHV1
      PZaNmCcYZHJ0CLvTXX3wT3UPUKnI2JxuCuXWmyhfbz++3tb2Qg8RTZZ92yJdY283eqSLINDY
      3dogkUwSGJpmIOhu2ToeT+BweR5JxHEYuVwilcogCAKiyYLbeRrhAzW21tdJ5wsM+Dxt3uoa
      yUQCWdtfSbu8PpobmersbIZJZHIMuN0Ibe6FoFVQbAPMTljYiLSPFJVNRphf2mBgtLUqPR/f
      IW/yMj7Ww/rySvX85NQEIJVKMjl7AUWWyec7CYnVGrmU5f7CGqVMkuDUxSOe4nTC6+u4+4bp
      9rVXbapKhVK5jKONqYDN4cKSTrAby+Dwdh425GgQ6BsYQhOdBDwmCmUVV1M5lBgYfnzfv56+
      IZyeLvKZNBZLa8X01Ox5NtdXyYg25s61VzTsRlO8/uab3LtzFwabKxpMFgtbq2tIoSCxdJaH
      ximntgTaCYfRELFaLWwd8Hx6WiSzDZ/HhclsIRWLH/EMINLX308uuUeqzWEOCAyPDNMV6Gmr
      Jckmo0SSOTLZTNvZ4vgQkEwie9th1jY2Udra93TSr8bq4jKpbILV1dZmIYIoMTQ2yfjI4GOY
      b8PY6BBLCwv0DrS2t7K6A5yfGkHRdF66dPH0l0BT0xPcv3cHHRidOjqnXclkYXhsnKHRMXTt
      6KPNqYrM6MgooqmdyYLOzt42uupEk0R8LU67dVWhXFHweNyU2xzoHC8mPC4bFV3EYe88hEpz
      zPT2BXF5fAjm9jNnJzjcfmZm/Mzfnac30FrbJgoCpUKerU2Z4ZHB010CmaxOLly82L7hEyII
      AsJj2NV0hkIqmaSiqggFE8EWHlPpdIaB0CBrG3uMTrRen6biScZmZvFaRG7fmW/Z9ljRSySj
      aXz9AWLxHF5H+43+46GwsbqMqpvoGb/AxMDR9JtLxdjY/nxGMbU+X9B1nb31VWyhMXwW6dkw
      hnv+sDA1M0MsXWSsjTn00vxdHF4/FquZYrGE19lcWAYmJlhaXGRL0xkcbX0mcqwIdi5+4Spb
      G2GG+o8yZZJIsHeAdDrBY5xXPTYuX5A53+PFfJLLeXKqjryxRtbuZGJiBAFDADpAZ3NthUyh
      RHR3C8nmYTTU/CHxBXsZG9/fxLXTfUsmK+dm5450tE+EXmL1wSKKqLK1m2Zs4CiEQGdzbZ2K
      quH0dOH3Hu0S6HGx2JyYVegeHyG6uo7KKWuBnkfsDge5ksz5K68T8Lc+3JqY7MTE4hlBsGKx
      WRjs6wHb0cXflCQJczUzzWmFideoKDKJSARvT80WyEjo+9joJOMJNE0jsrNJKtvaZOH5RMZk
      MrOyskKxjVN8J1is+xvqYiFHsXxaWe0lxqYnsEoS25ubVQsBYwZ4bEQmZ8+f9iCOGZFkIs7A
      yCAcoTq2kM8jywoefxBPG9+B40TXP48ppWnVecgQAIM6lHKZcHib4el2Ps+Pz+DoxLORiFuT
      yWTzODze048KYfAsomF3OFFUmVKxvRfb4/HsZKFPRiL0DI+hFnNVhxhjBjD4HI3drQie7m48
      CHT7T0dbc1zomkpgaJyN5fvY/MYm2OARdLLpJMlUCk2QMB2byfXpkNkLE82WyBZViolI1VPw
      xfqVBk+BxOTMLAGfl2Rkm+xjOPw8Tzi8fvbWFugZGsPpclT3AKcaHNfgWULh/b94G0egF5vF
      zODoOB7H6WlsTgpDAAzONP8/uxHzDag62csAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Frequency of Strikes by Time of Day' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAADnElEQVR4nO3aSW7jVhSG0ctOLbL/vQXIEmoQuBpbbF4GMowKAiEopEIn/s+ZiCI1uAN9
      4iPFrrXWCkL17z0AvCcBEG38/s26LDW/PL/XLLC7PwUwvzzXp99+fa9ZYHeWQEQTANHGhwcu
      1+q6rpbnb9XWdc+ZYDcPA+iqav7yuabLtbZlqX461DbfXrenWl0s8wH87RKoVVU/jtUNQ7W2
      1Xg67TAW7ONhAK21mi7XWp+fq7VWbV3uS6G+r/X2sueM8K95uARavn3963bX1Tbfqjw9wQfx
      Y3eBWqv1xa8/H8fDAPrpUOPlWtV1NZzO1U+Ht2PD8VTD8Vhd398/0/c1HI41nq+7DA0/y+Nr
      gHWpbb7VdL5UbVsN01RVVd0w1HA4VttaDadzLd++1ng817bM1ba1uuHhqgr+cx5+W/txrK4f
      ap1vVe1+UVxVb/uGw+G+r7WqatW/BtLWZZfB4Wd4eAYYjueqvr//0h/vtz77abr/DzCOVa3V
      Ns81XX+pbVlqOJ6qH4aqrtttePinHp4Bbk+/v23PX56q6r78qbbV/Pnp7dg23+6ff32F/5Mf
      ugvkkQg+Gg/DEU0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQ
      TQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQB
      EE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0
      ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRA
      NAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEE
      QDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDR
      BEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA
      0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQT
      ANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRAtPH7N13X
      13S5vtcssLs/AFnGlWyNo+sPAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Number of Strikes by State' width='192'>
      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
      afD/AVkC7WKo1o//AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='124' name='Strikes Effect on Flights' width='192'>
      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
      NcBfRfDI+H+n3a23oP6nYgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Time of Day vs Avg Cost by Strike' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
